#!/bin/bash
# Suite de tests compl√®te

API_URL="https://tp-securite-khelifa.francecentral.cloudapp.azure.com"

echo "üî• TP S√©curit√© Web - Tests Automatis√©s"
echo "======================================"

# Cr√©er utilisateur de test
echo "üìù Cr√©ation utilisateur de test..."
curl -s -X POST "$API_URL/create-user" > /dev/null

# Test 1: NoSQL Injection
echo -e "\nüóÉÔ∏è Test NoSQL Injection"
echo "----------------------"

echo "Bypass complet..."
NOSQL_RESULT=$(curl -s -X POST "$API_URL/vulnerable/login" \
  -H "Content-Type: application/json" \
  -d '{"username":{"$ne":null},"password":{"$ne":null}}')

if echo "$NOSQL_RESULT" | grep -q '"success":true'; then
    echo "‚úÖ NoSQL Injection r√©ussie"
    echo "   $(echo "$NOSQL_RESULT" | jq -r '.user.username // "N/A"')"
else
    echo "‚ùå NoSQL Injection √©chou√©e"
fi

echo "Test protection..."
SECURE_NOSQL=$(curl -s -X POST "$API_URL/secure/login" \
  -H "Content-Type: application/json" \
  -d '{"username":{"$ne":null},"password":{"$ne":null}}')

if echo "$SECURE_NOSQL" | grep -q '"success":false'; then
    echo "‚úÖ Protection NoSQL effective"
else
    echo "‚ùå Protection NoSQL √©chou√©e"
fi

# Test 2: LFI
echo -e "\nüìÅ Test Local File Inclusion"
echo "----------------------------"

echo "Lecture fichier secret..."
LFI_RESULT=$(curl -s "$API_URL/vulnerable/file?file=secret.txt")

if echo "$LFI_RESULT" | grep -q '"success":true'; then
    echo "‚úÖ LFI r√©ussie"
    echo "   $(echo "$LFI_RESULT" | jq -r '.content' | head -1)"
else
    echo "‚ùå LFI √©chou√©e"
fi

echo "Test protection..."
SECURE_LFI=$(curl -s "$API_URL/secure/file?file=secret.txt")

if echo "$SECURE_LFI" | grep -q '"success":false'; then
    echo "‚úÖ Protection LFI effective"
else
    echo "‚ùå Protection LFI √©chou√©e"
fi

# Test 3: JWT
echo -e "\nüîë Test JWT Vulnerabilities"
echo "---------------------------"

echo "G√©n√©ration token vuln√©rable..."
JWT_RESULT=$(curl -s -X POST "$API_URL/vulnerable/jwt-login" \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"secret123"}')

if echo "$JWT_RESULT" | grep -q '"success":true'; then
    echo "‚úÖ Token obtenu"
else
    echo "‚ùå Erreur g√©n√©ration token"
fi

echo "Test algorithme 'none'..."
NONE_TOKEN="eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJ1c2VybmFtZSI6ImFkbWluIiwicm9sZSI6ImFkbWluIn0."

JWT_NONE=$(curl -s -X POST "$API_URL/vulnerable/jwt-verify" \
  -H "Content-Type: application/json" \
  -d "{\"token\":\"$NONE_TOKEN\"}")

if echo "$JWT_NONE" | grep -q '"success":true'; then
    echo "‚úÖ Token 'none' accept√© (vuln√©rabilit√© confirm√©e)"
else
    echo "‚ùå Token 'none' rejet√©"
fi

echo "Test protection JWT..."
SECURE_JWT=$(curl -s -X POST "$API_URL/secure/jwt-verify" \
  -H "Content-Type: application/json" \
  -d "{\"token\":\"$NONE_TOKEN\"}")

if echo "$SECURE_JWT" | grep -q '"success":false'; then
    echo "‚úÖ Protection JWT effective"
else
    echo "‚ùå Protection JWT √©chou√©e"
fi

echo -e "\nüéØ Tests termin√©s"
echo "üìö Documentation compl√®te: $API_URL/api"
